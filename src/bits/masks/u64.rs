use crate::bits::BITS_PER_BYTE_U64 as BITS_PER_BYTE;

macro_rules! define_bits {
    ({$name:ident, $iota:literal}) => { pub const $name: u64 = 1u64 << $iota; };

    ($({$names:ident, $iotas:literal}),+) => { $(define_bits!({$names, $iotas});)+ };
}

macro_rules! define_bits_lsd {
    ({$name:ident, $iota:literal}) => { pub const $name: u64 = !0u64 >> $iota; };

    ($({$names:ident, $iotas:literal}),+) => { $(define_bits_lsd!({$names, $iotas});)+ };
}

macro_rules! define_bits_msd {
    ({$name:ident, $iota:literal}) => { pub const $name: u64 = !0u64 << $iota; };

    ($({$names:ident, $iotas:literal}),+) => { $(define_bits_msd!({$names, $iotas});)+ };
}

macro_rules! define_bytes {
    ({$name:ident, $iota:literal}) => { pub const $name: u64 = 0xFFu64 << BITS_PER_BYTE * $iota; };

    ($({$names:ident, $iotas:literal}),+) => { $(define_bytes!({$names, $iotas});)+ };
}

macro_rules! define_bytes_lsd {
    ({$name:ident, $iota:literal}) => { pub const $name: u64 = !0u64 >> BITS_PER_BYTE * $iota; };

    ($({$names:ident, $iotas:literal}),+) => { $(define_bytes_lsd!({$names, $iotas});)+ };
}

macro_rules! define_bytes_msd {
    ({$name:ident, $iota:literal}) => { pub const $name: u64 = !0u64 << BITS_PER_BYTE * $iota; };

    ($({$names:ident, $iotas:literal}),+) => { $(define_bytes_msd!({$names, $iotas});)+ };
}

define_bits!({BIT_0, 0u64}, {BIT_1, 1u64}, {BIT_2, 2u64}, {BIT_3, 3u64}, {BIT_4, 4u64}, {BIT_5, 5u64}, {BIT_6, 6u64}, {BIT_7, 7u64}, {BIT_8, 8u64}, {BIT_9, 9u64}, {BIT_10, 10u64}, {BIT_11, 11u64}, {BIT_12, 12u64}, {BIT_13, 13u64}, {BIT_14, 14u64}, {BIT_15, 15u64}, {BIT_16, 16u64}, {BIT_17, 17u64}, {BIT_18, 18u64}, {BIT_19, 19u64}, {BIT_20, 20u64}, {BIT_21, 21u64}, {BIT_22, 22u64}, {BIT_23, 23u64}, {BIT_24, 24u64}, {BIT_25, 25u64}, {BIT_26, 26u64}, {BIT_27, 27u64}, {BIT_28, 28u64}, {BIT_29, 29u64}, {BIT_30, 30u64}, {BIT_31, 31u64}, {BIT_32, 32u64}, {BIT_33, 33u64}, {BIT_34, 34u64}, {BIT_35, 35u64}, {BIT_36, 36u64}, {BIT_37, 37u64}, {BIT_38, 38u64}, {BIT_39, 39u64}, {BIT_40, 40u64}, {BIT_41, 41u64}, {BIT_42, 42u64}, {BIT_43, 43u64}, {BIT_44, 44u64}, {BIT_45, 45u64}, {BIT_46, 46u64}, {BIT_47, 47u64}, {BIT_48, 48u64}, {BIT_49, 49u64}, {BIT_50, 50u64}, {BIT_51, 51u64}, {BIT_52, 52u64}, {BIT_53, 53u64}, {BIT_54, 54u64}, {BIT_55, 55u64}, {BIT_56, 56u64}, {BIT_57, 57u64}, {BIT_58, 58u64}, {BIT_59, 59u64}, {BIT_60, 60u64}, {BIT_61, 61u64}, {BIT_62, 62u64}, {BIT_63, 63u64});

define_bits_lsd!({BIT_0_LSD, 63u64}, {BIT_1_LSD, 62u64}, {BIT_2_LSD, 61u64}, {BIT_3_LSD, 60u64}, {BIT_4_LSD, 59u64}, {BIT_5_LSD, 58u64}, {BIT_6_LSD, 57u64}, {BIT_7_LSD, 56u64}, {BIT_8_LSD, 55u64}, {BIT_9_LSD, 54u64}, {BIT_10_LSD, 53u64}, {BIT_11_LSD, 52u64}, {BIT_12_LSD, 51u64}, {BIT_13_LSD, 50u64}, {BIT_14_LSD, 49u64}, {BIT_15_LSD, 48u64}, {BIT_16_LSD, 47u64}, {BIT_17_LSD, 46u64}, {BIT_18_LSD, 45u64}, {BIT_19_LSD, 44u64}, {BIT_20_LSD, 43u64}, {BIT_21_LSD, 42u64}, {BIT_22_LSD, 41u64}, {BIT_23_LSD, 40u64}, {BIT_24_LSD, 39u64}, {BIT_25_LSD, 38u64}, {BIT_26_LSD, 37u64}, {BIT_27_LSD, 36u64}, {BIT_28_LSD, 35u64}, {BIT_29_LSD, 34u64}, {BIT_30_LSD, 33u64}, {BIT_31_LSD, 32u64}, {BIT_32_LSD, 31u64}, {BIT_33_LSD, 30u64}, {BIT_34_LSD, 29u64}, {BIT_35_LSD, 28u64}, {BIT_36_LSD, 27u64}, {BIT_37_LSD, 26u64}, {BIT_38_LSD, 25u64}, {BIT_39_LSD, 24u64}, {BIT_40_LSD, 23u64}, {BIT_41_LSD, 22u64}, {BIT_42_LSD, 21u64}, {BIT_43_LSD, 20u64}, {BIT_44_LSD, 19u64}, {BIT_45_LSD, 18u64}, {BIT_46_LSD, 17u64}, {BIT_47_LSD, 16u64}, {BIT_48_LSD, 15u64}, {BIT_49_LSD, 14u64}, {BIT_50_LSD, 13u64}, {BIT_51_LSD, 12u64}, {BIT_52_LSD, 11u64}, {BIT_53_LSD, 10u64}, {BIT_54_LSD, 9u64}, {BIT_55_LSD, 8u64}, {BIT_56_LSD, 7u64}, {BIT_57_LSD, 6u64}, {BIT_58_LSD, 5u64}, {BIT_59_LSD, 4u64}, {BIT_60_LSD, 3u64}, {BIT_61_LSD, 2u64}, {BIT_62_LSD, 1u64}, {BIT_63_LSD, 0u64});

define_bits_msd!({BIT_0_MSD, 0u64}, {BIT_1_MSD, 1u64}, {BIT_2_MSD, 2u64}, {BIT_3_MSD, 3u64}, {BIT_4_MSD, 4u64}, {BIT_5_MSD, 5u64}, {BIT_6_MSD, 6u64}, {BIT_7_MSD, 7u64}, {BIT_8_MSD, 8u64}, {BIT_9_MSD, 9u64}, {BIT_10_MSD, 10u64}, {BIT_11_MSD, 11u64}, {BIT_12_MSD, 12u64}, {BIT_13_MSD, 13u64}, {BIT_14_MSD, 14u64}, {BIT_15_MSD, 15u64}, {BIT_16_MSD, 16u64}, {BIT_17_MSD, 17u64}, {BIT_18_MSD, 18u64}, {BIT_19_MSD, 19u64}, {BIT_20_MSD, 20u64}, {BIT_21_MSD, 21u64}, {BIT_22_MSD, 22u64}, {BIT_23_MSD, 23u64}, {BIT_24_MSD, 24u64}, {BIT_25_MSD, 25u64}, {BIT_26_MSD, 26u64}, {BIT_27_MSD, 27u64}, {BIT_28_MSD, 28u64}, {BIT_29_MSD, 29u64}, {BIT_30_MSD, 30u64}, {BIT_31_MSD, 31u64}, {BIT_32_MSD, 32u64}, {BIT_33_MSD, 33u64}, {BIT_34_MSD, 34u64}, {BIT_35_MSD, 35u64}, {BIT_36_MSD, 36u64}, {BIT_37_MSD, 37u64}, {BIT_38_MSD, 38u64}, {BIT_39_MSD, 39u64}, {BIT_40_MSD, 40u64}, {BIT_41_MSD, 41u64}, {BIT_42_MSD, 42u64}, {BIT_43_MSD, 43u64}, {BIT_44_MSD, 44u64}, {BIT_45_MSD, 45u64}, {BIT_46_MSD, 46u64}, {BIT_47_MSD, 47u64}, {BIT_48_MSD, 48u64}, {BIT_49_MSD, 49u64}, {BIT_50_MSD, 50u64}, {BIT_51_MSD, 51u64}, {BIT_52_MSD, 52u64}, {BIT_53_MSD, 53u64}, {BIT_54_MSD, 54u64}, {BIT_55_MSD, 55u64}, {BIT_56_MSD, 56u64}, {BIT_57_MSD, 57u64}, {BIT_58_MSD, 58u64}, {BIT_59_MSD, 59u64}, {BIT_60_MSD, 60u64}, {BIT_61_MSD, 61u64}, {BIT_62_MSD, 62u64}, {BIT_63_MSD, 63u64});

define_bytes!({BYTE_0, 0u64}, {BYTE_1, 1u64}, {BYTE_2, 2u64}, {BYTE_3, 3u64}, {BYTE_4, 4u64}, {BYTE_5, 5u64}, {BYTE_6, 6u64}, {BYTE_7, 7u64});

define_bytes_lsd!({BYTE_0_LSD, 7u64}, {BYTE_1_LSD, 6u64}, {BYTE_2_LSD, 5u64}, {BYTE_3_LSD, 4u64}, {BYTE_4_LSD, 3u64}, {BYTE_5_LSD, 2u64}, {BYTE_6_LSD, 1u64}, {BYTE_7_LSD, 0u64});

define_bytes_msd!({BYTE_0_MSD, 0u64}, {BYTE_1_MSD, 1u64}, {BYTE_2_MSD, 2u64}, {BYTE_3_MSD, 3u64}, {BYTE_4_MSD, 4u64}, {BYTE_5_MSD, 5u64}, {BYTE_6_MSD, 6u64}, {BYTE_7_MSD, 7u64});

#[cfg(test)]
mod tests {
    use super::*;

    mod assertions {
        #[test]
        fn bits() {
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000001u64, super::BIT_0);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000010u64, super::BIT_1);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000100u64, super::BIT_2);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00000000_00001000u64, super::BIT_3);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00000000_00010000u64, super::BIT_4);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00000000_00100000u64, super::BIT_5);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00000000_01000000u64, super::BIT_6);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00000000_10000000u64, super::BIT_7);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00000001_00000000u64, super::BIT_8);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00000010_00000000u64, super::BIT_9);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00000100_00000000u64, super::BIT_10);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00001000_00000000u64, super::BIT_11);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00010000_00000000u64, super::BIT_12);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00100000_00000000u64, super::BIT_13);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_01000000_00000000u64, super::BIT_14);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_10000000_00000000u64, super::BIT_15);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000001_00000000_00000000u64, super::BIT_16);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000010_00000000_00000000u64, super::BIT_17);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000100_00000000_00000000u64, super::BIT_18);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00001000_00000000_00000000u64, super::BIT_19);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00010000_00000000_00000000u64, super::BIT_20);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00100000_00000000_00000000u64, super::BIT_21);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_01000000_00000000_00000000u64, super::BIT_22);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_10000000_00000000_00000000u64, super::BIT_23);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000001_00000000_00000000_00000000u64, super::BIT_24);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000010_00000000_00000000_00000000u64, super::BIT_25);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000100_00000000_00000000_00000000u64, super::BIT_26);
            assert_eq!(0b00000000_00000000_00000000_00000000_00001000_00000000_00000000_00000000u64, super::BIT_27);
            assert_eq!(0b00000000_00000000_00000000_00000000_00010000_00000000_00000000_00000000u64, super::BIT_28);
            assert_eq!(0b00000000_00000000_00000000_00000000_00100000_00000000_00000000_00000000u64, super::BIT_29);
            assert_eq!(0b00000000_00000000_00000000_00000000_01000000_00000000_00000000_00000000u64, super::BIT_30);
            assert_eq!(0b00000000_00000000_00000000_00000000_10000000_00000000_00000000_00000000u64, super::BIT_31);
            assert_eq!(0b00000000_00000000_00000000_00000001_00000000_00000000_00000000_00000000u64, super::BIT_32);
            assert_eq!(0b00000000_00000000_00000000_00000010_00000000_00000000_00000000_00000000u64, super::BIT_33);
            assert_eq!(0b00000000_00000000_00000000_00000100_00000000_00000000_00000000_00000000u64, super::BIT_34);
            assert_eq!(0b00000000_00000000_00000000_00001000_00000000_00000000_00000000_00000000u64, super::BIT_35);
            assert_eq!(0b00000000_00000000_00000000_00010000_00000000_00000000_00000000_00000000u64, super::BIT_36);
            assert_eq!(0b00000000_00000000_00000000_00100000_00000000_00000000_00000000_00000000u64, super::BIT_37);
            assert_eq!(0b00000000_00000000_00000000_01000000_00000000_00000000_00000000_00000000u64, super::BIT_38);
            assert_eq!(0b00000000_00000000_00000000_10000000_00000000_00000000_00000000_00000000u64, super::BIT_39);
            assert_eq!(0b00000000_00000000_00000001_00000000_00000000_00000000_00000000_00000000u64, super::BIT_40);
            assert_eq!(0b00000000_00000000_00000010_00000000_00000000_00000000_00000000_00000000u64, super::BIT_41);
            assert_eq!(0b00000000_00000000_00000100_00000000_00000000_00000000_00000000_00000000u64, super::BIT_42);
            assert_eq!(0b00000000_00000000_00001000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_43);
            assert_eq!(0b00000000_00000000_00010000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_44);
            assert_eq!(0b00000000_00000000_00100000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_45);
            assert_eq!(0b00000000_00000000_01000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_46);
            assert_eq!(0b00000000_00000000_10000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_47);
            assert_eq!(0b00000000_00000001_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_48);
            assert_eq!(0b00000000_00000010_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_49);
            assert_eq!(0b00000000_00000100_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_50);
            assert_eq!(0b00000000_00001000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_51);
            assert_eq!(0b00000000_00010000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_52);
            assert_eq!(0b00000000_00100000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_53);
            assert_eq!(0b00000000_01000000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_54);
            assert_eq!(0b00000000_10000000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_55);
            assert_eq!(0b00000001_00000000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_56);
            assert_eq!(0b00000010_00000000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_57);
            assert_eq!(0b00000100_00000000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_58);
            assert_eq!(0b00001000_00000000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_59);
            assert_eq!(0b00010000_00000000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_60);
            assert_eq!(0b00100000_00000000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_61);
            assert_eq!(0b01000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_62);
            assert_eq!(0b10000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_63);
        }

        #[test]
        fn bits_lsd() {
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000001u64, super::BIT_0_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000011u64, super::BIT_1_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000111u64, super::BIT_2_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00000000_00001111u64, super::BIT_3_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00000000_00011111u64, super::BIT_4_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00000000_00111111u64, super::BIT_5_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00000000_01111111u64, super::BIT_6_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00000000_11111111u64, super::BIT_7_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00000001_11111111u64, super::BIT_8_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00000011_11111111u64, super::BIT_9_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00000111_11111111u64, super::BIT_10_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00001111_11111111u64, super::BIT_11_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00011111_11111111u64, super::BIT_12_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_00111111_11111111u64, super::BIT_13_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_01111111_11111111u64, super::BIT_14_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000000_11111111_11111111u64, super::BIT_15_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000001_11111111_11111111u64, super::BIT_16_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000011_11111111_11111111u64, super::BIT_17_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00000111_11111111_11111111u64, super::BIT_18_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00001111_11111111_11111111u64, super::BIT_19_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00011111_11111111_11111111u64, super::BIT_20_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_00111111_11111111_11111111u64, super::BIT_21_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_01111111_11111111_11111111u64, super::BIT_22_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000000_11111111_11111111_11111111u64, super::BIT_23_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000001_11111111_11111111_11111111u64, super::BIT_24_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000011_11111111_11111111_11111111u64, super::BIT_25_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00000111_11111111_11111111_11111111u64, super::BIT_26_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00001111_11111111_11111111_11111111u64, super::BIT_27_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00011111_11111111_11111111_11111111u64, super::BIT_28_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_00111111_11111111_11111111_11111111u64, super::BIT_29_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_01111111_11111111_11111111_11111111u64, super::BIT_30_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000000_11111111_11111111_11111111_11111111u64, super::BIT_31_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000001_11111111_11111111_11111111_11111111u64, super::BIT_32_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000011_11111111_11111111_11111111_11111111u64, super::BIT_33_LSD);
            assert_eq!(0b00000000_00000000_00000000_00000111_11111111_11111111_11111111_11111111u64, super::BIT_34_LSD);
            assert_eq!(0b00000000_00000000_00000000_00001111_11111111_11111111_11111111_11111111u64, super::BIT_35_LSD);
            assert_eq!(0b00000000_00000000_00000000_00011111_11111111_11111111_11111111_11111111u64, super::BIT_36_LSD);
            assert_eq!(0b00000000_00000000_00000000_00111111_11111111_11111111_11111111_11111111u64, super::BIT_37_LSD);
            assert_eq!(0b00000000_00000000_00000000_01111111_11111111_11111111_11111111_11111111u64, super::BIT_38_LSD);
            assert_eq!(0b00000000_00000000_00000000_11111111_11111111_11111111_11111111_11111111u64, super::BIT_39_LSD);
            assert_eq!(0b00000000_00000000_00000001_11111111_11111111_11111111_11111111_11111111u64, super::BIT_40_LSD);
            assert_eq!(0b00000000_00000000_00000011_11111111_11111111_11111111_11111111_11111111u64, super::BIT_41_LSD);
            assert_eq!(0b00000000_00000000_00000111_11111111_11111111_11111111_11111111_11111111u64, super::BIT_42_LSD);
            assert_eq!(0b00000000_00000000_00001111_11111111_11111111_11111111_11111111_11111111u64, super::BIT_43_LSD);
            assert_eq!(0b00000000_00000000_00011111_11111111_11111111_11111111_11111111_11111111u64, super::BIT_44_LSD);
            assert_eq!(0b00000000_00000000_00111111_11111111_11111111_11111111_11111111_11111111u64, super::BIT_45_LSD);
            assert_eq!(0b00000000_00000000_01111111_11111111_11111111_11111111_11111111_11111111u64, super::BIT_46_LSD);
            assert_eq!(0b00000000_00000000_11111111_11111111_11111111_11111111_11111111_11111111u64, super::BIT_47_LSD);
            assert_eq!(0b00000000_00000001_11111111_11111111_11111111_11111111_11111111_11111111u64, super::BIT_48_LSD);
            assert_eq!(0b00000000_00000011_11111111_11111111_11111111_11111111_11111111_11111111u64, super::BIT_49_LSD);
            assert_eq!(0b00000000_00000111_11111111_11111111_11111111_11111111_11111111_11111111u64, super::BIT_50_LSD);
            assert_eq!(0b00000000_00001111_11111111_11111111_11111111_11111111_11111111_11111111u64, super::BIT_51_LSD);
            assert_eq!(0b00000000_00011111_11111111_11111111_11111111_11111111_11111111_11111111u64, super::BIT_52_LSD);
            assert_eq!(0b00000000_00111111_11111111_11111111_11111111_11111111_11111111_11111111u64, super::BIT_53_LSD);
            assert_eq!(0b00000000_01111111_11111111_11111111_11111111_11111111_11111111_11111111u64, super::BIT_54_LSD);
            assert_eq!(0b00000000_11111111_11111111_11111111_11111111_11111111_11111111_11111111u64, super::BIT_55_LSD);
            assert_eq!(0b00000001_11111111_11111111_11111111_11111111_11111111_11111111_11111111u64, super::BIT_56_LSD);
            assert_eq!(0b00000011_11111111_11111111_11111111_11111111_11111111_11111111_11111111u64, super::BIT_57_LSD);
            assert_eq!(0b00000111_11111111_11111111_11111111_11111111_11111111_11111111_11111111u64, super::BIT_58_LSD);
            assert_eq!(0b00001111_11111111_11111111_11111111_11111111_11111111_11111111_11111111u64, super::BIT_59_LSD);
            assert_eq!(0b00011111_11111111_11111111_11111111_11111111_11111111_11111111_11111111u64, super::BIT_60_LSD);
            assert_eq!(0b00111111_11111111_11111111_11111111_11111111_11111111_11111111_11111111u64, super::BIT_61_LSD);
            assert_eq!(0b01111111_11111111_11111111_11111111_11111111_11111111_11111111_11111111u64, super::BIT_62_LSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11111111_11111111_11111111u64, super::BIT_63_LSD);
        }

        #[test]
        fn bits_msd() {
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11111111_11111111_11111111u64, super::BIT_0_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11111111_11111111_11111110u64, super::BIT_1_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11111111_11111111_11111100u64, super::BIT_2_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11111111_11111111_11111000u64, super::BIT_3_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11111111_11111111_11110000u64, super::BIT_4_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11111111_11111111_11100000u64, super::BIT_5_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11111111_11111111_11000000u64, super::BIT_6_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11111111_11111111_10000000u64, super::BIT_7_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11111111_11111111_00000000u64, super::BIT_8_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11111111_11111110_00000000u64, super::BIT_9_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11111111_11111100_00000000u64, super::BIT_10_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11111111_11111000_00000000u64, super::BIT_11_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11111111_11110000_00000000u64, super::BIT_12_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11111111_11100000_00000000u64, super::BIT_13_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11111111_11000000_00000000u64, super::BIT_14_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11111111_10000000_00000000u64, super::BIT_15_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11111111_00000000_00000000u64, super::BIT_16_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11111110_00000000_00000000u64, super::BIT_17_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11111100_00000000_00000000u64, super::BIT_18_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11111000_00000000_00000000u64, super::BIT_19_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11110000_00000000_00000000u64, super::BIT_20_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11100000_00000000_00000000u64, super::BIT_21_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_11000000_00000000_00000000u64, super::BIT_22_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_10000000_00000000_00000000u64, super::BIT_23_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111111_00000000_00000000_00000000u64, super::BIT_24_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111110_00000000_00000000_00000000u64, super::BIT_25_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111100_00000000_00000000_00000000u64, super::BIT_26_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11111000_00000000_00000000_00000000u64, super::BIT_27_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11110000_00000000_00000000_00000000u64, super::BIT_28_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11100000_00000000_00000000_00000000u64, super::BIT_29_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_11000000_00000000_00000000_00000000u64, super::BIT_30_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_10000000_00000000_00000000_00000000u64, super::BIT_31_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111111_00000000_00000000_00000000_00000000u64, super::BIT_32_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111110_00000000_00000000_00000000_00000000u64, super::BIT_33_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111100_00000000_00000000_00000000_00000000u64, super::BIT_34_MSD);
            assert_eq!(0b11111111_11111111_11111111_11111000_00000000_00000000_00000000_00000000u64, super::BIT_35_MSD);
            assert_eq!(0b11111111_11111111_11111111_11110000_00000000_00000000_00000000_00000000u64, super::BIT_36_MSD);
            assert_eq!(0b11111111_11111111_11111111_11100000_00000000_00000000_00000000_00000000u64, super::BIT_37_MSD);
            assert_eq!(0b11111111_11111111_11111111_11000000_00000000_00000000_00000000_00000000u64, super::BIT_38_MSD);
            assert_eq!(0b11111111_11111111_11111111_10000000_00000000_00000000_00000000_00000000u64, super::BIT_39_MSD);
            assert_eq!(0b11111111_11111111_11111111_00000000_00000000_00000000_00000000_00000000u64, super::BIT_40_MSD);
            assert_eq!(0b11111111_11111111_11111110_00000000_00000000_00000000_00000000_00000000u64, super::BIT_41_MSD);
            assert_eq!(0b11111111_11111111_11111100_00000000_00000000_00000000_00000000_00000000u64, super::BIT_42_MSD);
            assert_eq!(0b11111111_11111111_11111000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_43_MSD);
            assert_eq!(0b11111111_11111111_11110000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_44_MSD);
            assert_eq!(0b11111111_11111111_11100000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_45_MSD);
            assert_eq!(0b11111111_11111111_11000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_46_MSD);
            assert_eq!(0b11111111_11111111_10000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_47_MSD);
            assert_eq!(0b11111111_11111111_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_48_MSD);
            assert_eq!(0b11111111_11111110_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_49_MSD);
            assert_eq!(0b11111111_11111100_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_50_MSD);
            assert_eq!(0b11111111_11111000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_51_MSD);
            assert_eq!(0b11111111_11110000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_52_MSD);
            assert_eq!(0b11111111_11100000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_53_MSD);
            assert_eq!(0b11111111_11000000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_54_MSD);
            assert_eq!(0b11111111_10000000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_55_MSD);
            assert_eq!(0b11111111_00000000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_56_MSD);
            assert_eq!(0b11111110_00000000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_57_MSD);
            assert_eq!(0b11111100_00000000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_58_MSD);
            assert_eq!(0b11111000_00000000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_59_MSD);
            assert_eq!(0b11110000_00000000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_60_MSD);
            assert_eq!(0b11100000_00000000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_61_MSD);
            assert_eq!(0b11000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_62_MSD);
            assert_eq!(0b10000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000u64, super::BIT_63_MSD);
        }

        #[test]
        fn bytes() {
            assert_eq!(0x00_00_00_00_00_00_00_FFu64, super::BYTE_0);
            assert_eq!(0x00_00_00_00_00_00_FF_00u64, super::BYTE_1);
            assert_eq!(0x00_00_00_00_00_FF_00_00u64, super::BYTE_2);
            assert_eq!(0x00_00_00_00_FF_00_00_00u64, super::BYTE_3);
            assert_eq!(0x00_00_00_FF_00_00_00_00u64, super::BYTE_4);
            assert_eq!(0x00_00_FF_00_00_00_00_00u64, super::BYTE_5);
            assert_eq!(0x00_FF_00_00_00_00_00_00u64, super::BYTE_6);
            assert_eq!(0xFF_00_00_00_00_00_00_00u64, super::BYTE_7);
        }

        #[test]
        fn bytes_lsd() {
            assert_eq!(0x00_00_00_00_00_00_00_FFu64, super::BYTE_0_LSD);
            assert_eq!(0x00_00_00_00_00_00_FF_FFu64, super::BYTE_1_LSD);
            assert_eq!(0x00_00_00_00_00_FF_FF_FFu64, super::BYTE_2_LSD);
            assert_eq!(0x00_00_00_00_FF_FF_FF_FFu64, super::BYTE_3_LSD);
            assert_eq!(0x00_00_00_FF_FF_FF_FF_FFu64, super::BYTE_4_LSD);
            assert_eq!(0x00_00_FF_FF_FF_FF_FF_FFu64, super::BYTE_5_LSD);
            assert_eq!(0x00_FF_FF_FF_FF_FF_FF_FFu64, super::BYTE_6_LSD);
            assert_eq!(0xFF_FF_FF_FF_FF_FF_FF_FFu64, super::BYTE_7_LSD);

        }

        #[test]
        fn bytes_msd() {
            assert_eq!(0xFF_FF_FF_FF_FF_FF_FF_FFu64, super::BYTE_0_MSD);
            assert_eq!(0xFF_FF_FF_FF_FF_FF_FF_00u64, super::BYTE_1_MSD);
            assert_eq!(0xFF_FF_FF_FF_FF_FF_00_00u64, super::BYTE_2_MSD);
            assert_eq!(0xFF_FF_FF_FF_FF_00_00_00u64, super::BYTE_3_MSD);
            assert_eq!(0xFF_FF_FF_FF_00_00_00_00u64, super::BYTE_4_MSD);
            assert_eq!(0xFF_FF_FF_00_00_00_00_00u64, super::BYTE_5_MSD);
            assert_eq!(0xFF_FF_00_00_00_00_00_00u64, super::BYTE_6_MSD);
            assert_eq!(0xFF_00_00_00_00_00_00_00u64, super::BYTE_7_MSD);
        }
    }
}
